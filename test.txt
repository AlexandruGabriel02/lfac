_STRUCTURES_
custom myCustom
{
vars:
    var int $x;
    var string $y;
methods:
    function functieVoid (){

    }

    function functieBool(var const char $c) : bool 
    {
        return 0;
    }
}

custom emptyObj
{
vars:
methods:
}

_GLOBAL_VARS_
var int $x, $x <- false;
var string $str, $a <- "xA01", $b <- "ABC";
array bool $b <- [ 12.3, true, 9., 'a'], $arr;
var const float $fl <- 12., $c <- 12.12;
custom myCustom $x(102, "myString");
custom const emptyObj $x;


_FUNCTIONS_
function floatFunc() : float 
{
    for $a in $b
    {
        if $b < 10
        {
            $b <- $b + 1;
        }
        elif $b > 10
        {

        }
        elif $b != 0
        {
            
        }
         else
        {

        }
    }
    return $x + $y;
}

function intFunc1() : int 
{
    repeat
    {
        $b <- 5;
        while $a < $b
        {$a <- 3;}
    }
    until $b != $a and $a != $b;
    return 20;
}

function intFunc2 (var const int $x, var string $str) : int
{ 
    var char $character;
    while $a<$b
    {
      $a <- 2;  
    } 
    return 10;
}

_BEGIN_PROGR_

$c[5] <- 100;
$x <- intFunc1($x * $y + $z - ($a * $b - $c)) % 10;
$obj->$x <- $obj->functie($a, 12, "a", intFunc2());
$mat[10]->$b[10] <- functie($x->functie(10), $x->$y);