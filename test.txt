_STRUCTURES_
custom myCustom
{
vars:
    var int $x;
    var string $y;
methods:
    function functieVoid (){

    }

    function functieBool(var const char $c) : bool 
    {
        return 0;
    }
}

custom emptyObj
{
vars:
methods:
}

_GLOBAL_VARS_
var int $t, $z <- 2;
var string $str, $a <- "xA01", $b <- "ABC";
array bool $bb <- [ true, true, false, false], $arr;
var const float $fl <- 12., $c <- 12.12;
custom myCustom $obj(102, "string_type");
custom const emptyObj $obj2;


_FUNCTIONS_
function floatFunc() : float 
{
    for $a in $b
    {
        if $b < 10
        {
            $z <- $z + 1;
        }
        elif $b > 10
        {

        }
        elif $b != 0
        {
            
        }
         else
        {

        }
    }
    return 12.;
}

function intFunc1() : int 
{
    repeat
    {
        $b <- "altceva";
        while $a < $b
        {$z <- 3;}
    }
    until $b != $a and $a != $b;
    return 20;
}

function intFunc2 (var const int $x, var string $str) : int
{ 
    var char $character;
    while $a<$b
    {
      $z <- 2;  
    } 
    return 10;
}

_BEGIN_PROGR_

$t <- intFunc1($obj->$y + "ceva" - ($a * $b - $b)) % 10;

array bool $boolarr;
$boolarr[2] <- $obj->functieBool(intFunc2());
$obj->functieVoid(intFunc2());